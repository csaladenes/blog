<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta charset="utf-8">
    <meta http-equiv="content-Type" content="text/html; charset=utf-8" />
    <meta name="description" content="Deadly Timeline | Global Causes of Death Visualization #tsne #who #d3plus #dataviz #d3js @csaladenes" />
    <meta name="keywords" content="csaladenes, d3.js, data visualization, infographic, d3plus, d3, who, COD, causes of death, mortality, death, disease, data visualization, mit oec, mit, mit atlas, macro connections" />
    <meta property="og:image" content="http://blog.csaladen.es/health/deadly_timeline_global_causes_of_death_visualization.png" />
	<meta property="twitter:image" content="http://blog.csaladen.es/health/deadly_timeline_global_causes_of_death_visualization.png" />
    <meta property="og:description" content="Deadly Timeline | Global Causes of Death Visualization #tsne #who #d3plus #dataviz #d3js @csaladenes" />
	<meta property="twitter:description" content="Deadly Timeline | Global Causes of Death Visualization #tsne #who #d3plus #dataviz #d3js @csaladenes" />
    <meta property="og:title" content="Deadly Timeline | Global Causes of Death Visualization" />
	<meta property="twitter:title" content="Deadly Timeline | Global Causes of Death Visualization" />
    <meta http-equiv="content-Type" content="text/html; charset=utf-8" />
	<meta property="og:url" content="https://csaladenes.wordpress.com/?p=821"/>
	<meta property="twitter:url" content="https://csaladenes.wordpress.com/?p=821"/>
    <meta property="og:site_name" content="Try something new. Everyday." />
    <meta property="fb:admins" content="100943737036023614165" />
	<link rel="shortcut icon" href="../tsne.png" />
	<link rel="publisher" href="https://plus.google.com/106181965793093327960" />
    <title>Deadly Timeline | Global Causes of Death Visualization</title>
	<style>
@font-face {
	font-family: "Righteous";
	src: url(Righteous-Regular.ttf) format("truetype");
}
.logo, .viz, #social {
 	-webkit-transition: opacity 0.5s;
	  -moz-transition: opacity 0.5s;
	  -o-transition: opacity 0.5s;
	  -ms-transition: opacity 0.5s;       
	  transition: opacity 0.5s;
}
.viz{
	width: -moz-calc(100% - 200px);
	width: -webkit-calc(100% - 200px);
	width: calc(100% - 200px);
}
a{
	font-family:Righteous;
	text-decoration:none;
}
a:hover{
	font-family:Righteous;
	text-decoration:underline;
}
a:visited{
	color: #444;
}
.logo:hover{
	cursor:pointer;
}
#social {
	text-decoration: none;
	padding-top:1px;
	white-space:nowrap;
	overflow:hidden;
}
.socialico{
	width:21px;
	height:21px;
}
</style>

<script type="text/javascript">var switchTo5x=true;</script>
<script type="text/javascript" src="http://w.sharethis.com/button/buttons.js"></script>
<script type="text/javascript">stLight.options({publisher: "505a26ad-d820-47bd-a500-7f49d04a30f5", doNotHash: false, doNotCopy: false, hashAddressBar: true,shorten:false});</script>

</head>

<!-- load D3js -->
<script src="d3.js"></script>

<!-- load D3plus after D3js -->
<script src="d3plusen.js"></script>

<script src="jszip.min.js"></script>
<script src="JSZipUtils.min.js"></script>
<script src="svgexport.js"></script>

<body link="#444">
<!-- create container element for visualization -->
<a id="pngdownload" href="" download="" style="visibility:hidden;display:none;position:fixed;top:0px;left:0px;width:0px;height:0px;"></a>


<div style="position: fixed;
    left: 50%;
    top: 50%;
    height: 150px;
    margin-top: -168px;
    width: 150px;
    margin-left: -170px;" class="loading">
<img style="position: absolute;
    left: 0px;
    top: 0px;
    z-index: 51;
    height: 30px;
    margin-top: 110px;
	margin-left: 60px;
    width: 30px;" src="b.gif"/>
<img style="position: absolute;
    left: 0px;
    top: 0px;
    z-index: 50;
    height: 150px;
    width: 150px;
    border:2px solid #b8371d;" src="tsne.png"/>
</div>

<div style="position: fixed;
    right: 20px;
    top: 70px;
    z-index: 101;
	opacity: 0;
    height: 100%
	width:190px;" class="logo">
	<img style="position: absolute;
    right: 60px;
    top:250px;
    height: 52px;
	border: solid 1px #888;
    width: 52px;" src="stacked.png"
	alt="Timeline"
	title="Timeline"
	onclick='show(1);'>
	<img style="position: absolute;
    right: 0px;
    top: 250px;
    height: 52px;
	border: solid  1px #888;
    width: 52px;" src="tree.png"
	alt="Treemap"
	title="Treemap"
	onclick='show(2);'>
	<img style="position: absolute;
    right: 120px;
    top: 250px;
    height: 52px;
	border: solid  1px #888;
    width: 52px;" src="line.png"
	alt="Line Plot"
	title="Line Plot"
	onclick='show(3);'>
	<img style="position: absolute;
    right: 0px;
    top: 0px;
	border: solid  1px #888;
    width: 173px;height:135;" src="deadly_timeline_global_causes_of_death_visualization.png"
	alt="Deadly Timeline Logo">
	<div style="position: absolute;
    right: 0px;
    top: 385px;
    height: 2px;
	background-color:#ccc;
	width: 174px;"></div>
	<div style="position: absolute;
    right: 0px;
    top: 230px;
    height: 2px;
	background-color:#ccc;
	width: 174px;"></div>
	<div id="social" style="z-index:102;position: absolute;
    right: 0px;
	height:35px;
    top: 405px;">
		<span class='st_facebook_custom'><img class="socialico" src="http://www.iconsdb.com/icons/download/silver/facebook-3-24.ico"></span>
		<!--<span class='st_fblike'></span>-->
		<span class='st_twitter_custom'><img class="socialico" src="http://www.iconsdb.com/icons/download/silver/twitter-3-24.ico"></span>
		<span class='st_googleplus_custom'><img class="socialico" src="http://www.iconsdb.com/icons/download/silver/google-plus-3-24.ico"></span>
		<span class='st_linkedin_custom'><img class="socialico" src="http://www.iconsdb.com/icons/download/silver/linkedin-3-24.ico"></span>
		<!--<span class='st_tumblr_custom'><img class="socialico" src="http://www.iconsdb.com/icons/download/silver/tumblr-3-24.ico"></span>-->
		<!--<span class='st_reddit_custom'><img class="socialico" src="reddit.png"></span>-->
		<span class='st_email_custom'><img class="socialico" src="http://www.iconsdb.com/icons/download/silver/email-13-24.ico"></span>
		<a href="" download="" id="csvdownload" ><span><img class="socialico" src="http://www.iconsdb.com/icons/download/silver/csv-24.ico"></span></a>
		<span id="pngdownloadwrapper"><img class="socialico" src="http://www.iconsdb.com/icons/download/silver/png-24.ico"></span>
	</div>


<a href="https://csaladenes.wordpress.com/?p=821" target="_blank">
	
<img style="position: absolute;
    right: 128px;
    top: 155px;
    height: 40px;
    width: 40px; border:1px solid #b8371d;" alt="Description"
	title="Description" src="tsne.png"/>
	<div style="position: absolute;
    right: 134px;
    top: 200px;
    height: 22px;
	font-size:10px;
	font-family: Righteous;
	text-align:center;
	white-space: nowrap;
    width: 40px;"/>description</div></a>
<a href="http://d3plus.org" target="_blank">
<img style="position: absolute;
    right: 41px;
    top: 159px;
    height: 40px;
    width: 40px;" alt="Created with D3plus"
	title="Created with D3plus" src="http://www.csaladen.es/img/group5/d3plus.png"/>
	<div style="position: absolute;
    right: 41px;
    top: 200px;
    height: 22px;
	font-size:10px;
	font-family: Righteous;
	text-align:center;
	white-space: nowrap;
    width: 40px;"/>engine</div></a>
<a href="http://www.csaladen.es" target="_blank">
<img style="position: absolute;
    right: 0px;
    top: 160px;
    height: 40px;
    width: 40px;" alt="Created by Denes Csala &copy; 2016"
	title="Created by Denes Csala &copy; 2016" src="http://www.csaladen.es/favicon.png"/>
	<div style="position: absolute;
    right: 0px;
    top: 200px;
    height: 22px;
	font-size:10px;
	font-family: Righteous;
	text-align:center;
	white-space: nowrap;
    width: 40px;"/>credit</div></a>
<a href="http://www.who.int/healthinfo/mortality_data/en/" target="_blank">
<img style="position: absolute;
    right: 81px;
    top: 156px;
    height: 40px;
    width: 40px;" alt="Data source: WHO"
	title="Data source: WHO" src="http://www.who.int/sysmedia/media/resources/apple-touch-icon.png"/>
	<div style="position: absolute;
    right: 81px;
    top: 200px;
    height: 22px;
	font-size:10px;
	font-family: Righteous;
	text-align:center;
	white-space: nowrap;
    width: 40px;"/>data</div></a>
	<div style="position: absolute;
    right: 60px;
    top: 308px;
    height: 22px;
	font-size:12px;
	font-family: Righteous;
	text-align:center;
    width: 52px;"
	alt="Timeline"
	title="Timeline"
	onclick='show(1);'>Timeline</div>
	<div style="position: absolute;
    right: 0px;
    top: 308px;
    height: 22px;
	font-size:12px;
	font-family: Righteous;
	text-align:center;
    width: 52px;"
	alt="Treemap"
	title="Treemap"
	onclick='show(2);'>Treemap</div>
	<div style="position: absolute;
    right: 120px;
    top: 308px;
    height: 22px;
	font-size:12px;
	font-family: Righteous;
	text-align:center;
    width: 52px;"
	alt="Line Plot"
	title="Line Plot"
	onclick='show(3);'>Line Plot</div>

	<div style="position: absolute;
    right: -5px;
    top: 330px;
    alt="Select Country"
	title="Select Country" id="countrylist"></div>
	
</div>
	
<div style="position: fixed; opacity:0;
    left: 5;
    top: 5;
    z-index: 100;" id="viz1" class="viz"></div>
<div style="position: fixed; opacity:0;
    left: 5;
    top: 5;
    z-index: 99;" id="viz2" class="viz"></div>
<div style="position: fixed; opacity:0;
    left: 5;
    top: 5;
    z-index: 99;" id="viz3" class="viz"></div>

<script>
  // sample data array
 
  var initcountry='900'; //642 romania 348 hungary 9998 szekelyland 840 US
  var initviz=1;
  var sca="share";
  
  function sethash(){
	  scale=(sca=="linear")?0:1;
	  window.location.hash="&viz_"+initviz+"&scale_"+scale+"&country_"+initcountry;
  }
  //hashing, startup, etc
  var hash=window.location.hash;
  if (hash==""){
	sethash();
  }
  else {
	if (hash.indexOf("&country_")>-1) {
		var cloc=hash.search("&country_");
		var cdummy=hash.slice(cloc+9)
		var cloc=cdummy.search("&");
		initcountry=(cloc>-1)?cdummy.slice(0,cloc):cdummy;
	}
	if (hash.indexOf("&viz")>-1) {
		var cloc=hash.search("&viz_");
		initviz=hash.slice(cloc+5,cloc+6)
	}
	if (hash.indexOf("&scale")>-1) {
		var cloc=hash.search("&scale_");
		scale=hash.slice(cloc+7,cloc+8)
	}
  }
  
  sca=(scale==1)?"share":"linear";
  
  setTimeout(function(){d3.selectAll(".logo").style("opacity",1)},10000)
  //setTimeout(function(){d3.select("#social").style("opacity",1)},2000)
  
  var showd=[true,true,true];
  
  var visualization = d3plus.viz().container("#viz1")
  var visualization2 = d3plus.viz().container("#viz2")
  var visualization3 = d3plus.viz().container("#viz3")
  
  var load=function(){};
  
  function show(a){
  
    initviz=a;
    sethash();
  
	d3.select("#viz1").style("opacity",0);
	d3.select("#viz2").style("opacity",0);
	d3.select("#viz3").style("opacity",0);
	d3.select("#viz1").style("z-index",99);
	d3.select("#viz2").style("z-index",99);
	d3.select("#viz3").style("z-index",99);
	d3.select("#viz3").style("z-index",99);
	
	d3.select("#viz"+a).style("z-index",100);
	d3.select("#viz"+a).style("opacity",1);
	
	if (showd[a-1]) { //draw if on first clikc/load
		load(initcountry,a);
		showd[a-1]=false;
	}
  }
  
  var path="db2/";
  
  d3.json('cnames.json',function(cnames){
  d3.json('wcountries.json',function(countries){ //countries without w has Szekelyland and other historical regions of Romania
  d3.json('icden.json',function(icd){ //for Hungarian nomenclature use icd.json
  d3.json('icd.json',function(icdhun){ //for Hungarian nomenclature use icd.json
  d3.json('wpop.json',function(pop){ //original was pop, but that has a lot of unnecessary intra-Romania data
  d3.json('hierarchy2.json',function(hierarchy){
  JSZipUtils.getBinaryContent(path+initcountry+'.zip', function(err, rawdata) {
	
	  var order={
		"1001":25,
		"1026":10,
		"1048":26,
		"1051":16,
		"1055":20,
		"1058":17,
		"1062":12,
		"1063":29,
		"1064":28,
		"1072":21,
		"1078":14,
		"1082":15,
		"1083":13,
		"1084":27,
		"1087":22,
		"1092":18,
		"1093":19,
		"1094":24,
		"1095":23
	  }

	  var color={
		"1026":"#b22200",
		"1062":"#b02200",
		"1083":"#e89c89",
		"1078":"#b35c1e",
		"1082":"#f7ba77",
		"1051":"#eace3f",
		"1058":"#ffee8d",
		"1092":"#d1d392",
		"1093":"#759143",
		"1055":"#a5c697",
		"1072":"#224f20",
		"1087":"#bbefd0",
		"1095":"#419391",
		"1094":"#afd5e8",
		"1001":"#282f6b",
		"1048":"#c5b5e5",
		"1084":"#5f487c",
		"1064":"#993f88",
		"1063":"#e099cf"
	   }
	  
	  function extend(rawdata){
		  var zip = new JSZip(rawdata);			  
		  var data=JSON.parse(zip.files['data.json'].asText());
		  
		  data.forEach(function(d) {
			d["icon"]="img/"+hierarchy[d["c"]]["group"]+".png";
			d["order"]=order[hierarchy[d["c"]]["group"]];
			d["order"]=((d["g"]=="f")?"a":"b")+d["order"]+"&group"+icd[hierarchy[d["c"]]["group"]];
			//d["color"]=icdhun[hierarchy[d["c"]]["group"]];
			d["color"]=color[hierarchy[d["c"]]["group"]];
			//d["cause2"]=icd[hierarchy[d["c"]]["cause2"]];
			//d["parent"]=icd[hierarchy[d["c"]]["parent"]];
			d["c"]=icd[d["c"]];
			d["s"]=(d["g"]=="f")?d["s"]:d["s"];
			d[d["g"]]=d["s"];
			
			if (initcountry in pop)
				if (d["t"] in pop[initcountry]) {
					d["ps"]=d["s"]*100.0/pop[initcountry][d["t"]][d["g"]][d["a"]]; //percentage
					d["p"+d["g"]]=d["ps"];
				} //else console.log("No population data for:",initcountry,d["t"]);
			
		  });
		  return data;	  
	  }
	  
	  function cap1(string) {
		return string.charAt(0).toUpperCase() + string.slice(1);
	  }
	  
	  function textformatter(text, params) {
	  
			if (text.indexOf("&group") > -1) text=text.slice(9);
			
			if (text === "s") {
			  return "Cases";
			}
			else if (text === "f") {
			  return "Cases";
			}
			else if (text === "m") {
			  return "Cases";
			}
			else if (text === "pf") {
			  return "Cases / Population";
			}
			else if (text === "pm") {
			  return "Cases / Population";
			}
			else if (text === "ps") {
			  return "Cases / Population";
			}
			else if (text.indexOf("Diseases of") > -1) {
			  var ntext=cap1(text.slice(16));
			  if (ntext.indexOf(" system") > -1) return ntext.slice(0,ntext.search(" system"));
			  else return ntext;
			}
			else if (text === "Neoplasms") {
			  return "Cancer";
			}
			else if (text === "External causes of morbidity and mortality") {
			  return "External";
			}
			else if (text === "Certain infectious and parasitic diseases") {
			  return "Infectious and Parasitic";
			}
			else {
			  return d3plus.string.title(text, params);
			}
	  };
	  
	  function numberformatter(number, params) {
        
        var formatted = d3plus.number.format(number, params);
        
		if (params.key === "ps") {
          return formatted + " %";
        }
		else if (params.key === "pf") {
          return formatted + " %";
        }
		else if (params.key === "pm") {
          return formatted + " %";
        }
        else {
          return formatted;
        }
      };
	  
	  function vfunc(gen,val) {
		return val+gen;
	  }
	  
	  data=extend(rawdata);
	  
	  var countrydict=[];
	  var rcountrydict=[];
	  var countrylist=[];
	  countries.forEach(function(d,i) {
		var dummy={"country":cnames[d]};
		countrylist.push(dummy);
		countrydict[cnames[d]]=d;
		rcountrydict[d]=cnames[d];
	  });
	  
	  var val="";
	  var gen="s";
	  var val3="";
	  var gen3="s";
	  var val2="";
	  var gen2="s";
	  var sub={"m":"Men","f":"Women"};
	  var title={"font":{"size":20}};
	  var font = {"family":"Righteous","size":15};
	  
	  var countrydrop = d3plus.form()
		.data(countrylist)
		.container("#countrylist")
		.font({"family":"Righteous","size":15,"align":"center","secondary":{"family":"Righteous"}})
		.id("country")
		.width(174)
		.text("country")
		.focus(rcountrydict[initcountry],function(d){
			showd=[true,true,true];
			showd[initviz-1]=false;
			load(countrydict[d],initviz);
		})
		.type("drop")
		.draw()
	  
	  d3.select("#pngdownloadwrapper")
		.on("click",function(){
			seturl();
			setTimeout(function(){d3.select("#pngdownload").node().click();},500);
		})
	
	  function seturl(){
		exportInlineSVG(d3.select("#viz"+initviz).select("#d3plus").node(), function(data) {
			d3.select("#pngdownload").node().href=data;
			d3.select("#pngdownload").node().download=rcountrydict[initcountry]+"_"+((initviz==1)?"Timeline":(initviz==2)?"Treemap":"Line_Plot")+".png";
		});
	  }
	  
	  
	  visualization
		.type("stacked")    // visualization type
		.data(data)
		.id({"value":["g","order","c"]})         // key for which our data is unique on
		.aggs({"a": "mean"})
		.depth(1)
		.y({"value":"s","label":(sca=="share")?"Share":"Cases (cumulative)","scale":sca})         // key to use for y-axis
		.x({"value":"a","label":"Age"})          // key to use for x-axis
		.time({"value":"t","solo":[2011,2012]}) 
		.color("color")
		.order({"value":"order","sort":"asc"})
		.margin("0px 30px 10px 20px")
		.font(font)
		.icon({"style": "knockout","value": "icon"})
		.legend({"filters":true})
		.messages({"style":false,"branding":false})
		.legend({"size":30})
		.axes({"background": {"color": "#eee"}}) 
		.shape({"interpolate": "basis"})
		.title({"value":cnames[initcountry],"sub":{"value":"Deadly Timeline | Global Causes of Death Visualization | Timeline"}})
		.title(title)
		.ui({"font":{"size":12},"value":[
		  {
			"method" : "depth",
			"value"  :[{"Gender":0}, {"Group":1}, {"Cause":2} ],
			"label" : " "
		  },
	      {
			"method" : function(value){
			  sca=value;
			  var v3=(sca=="share")?"Share":(val=="")?"Cases (cumulative)":"Cases (cumulative) / Population"
			  sethash();
			  visualization
			  .y({"scale": value})
			  .y({"label": v3})
			  .draw()
			},
			"value"  : [ {"Share":"share"}, {"Values":"linear"} ],
			"label" : " "
		  },
		  {
			"method" : function(value){
			  val=(value=="s")?"":"p";
			  var v3=(sca=="share")?"Share":(val=="")?"Cases (cumulative)":"Cases (cumulative) / Population"
			  visualization
			  .y(vfunc(gen,val))
			  .y({"label":v3})
			  .draw();
			},
			"value"  :[{"Cases":"s"} , {"Normalized":"p"}],
			"label" : " "
		  },
		  {
			"method" : function(value){
			  gen=value;
			  visualization
			  .y(vfunc(gen,val))
			  .draw();
			},
			"value"  : [{"Everyone":"s"},{"Women":"f"}, {"Men":"m"}],
			"label" : " "
		  }
		]})
		.tooltip({"sub":function(d){
			if (d["g"]=="m") 
				visualization
				.tooltip({"background":"#ddddff"});
			else	visualization
				.tooltip({"background":"#ffdddd"});
			return sub[d["g"]];
		}})
		.format({
		  "text": function(text, params) {
			  return textformatter(text, params);
		  },
		  "number": function(number, params) {
			  return numberformatter(number, params);
          }
		  })
		//.draw()             // finally, draw the visualization!

		visualization3
		.type("line")    // visualization type
		.data({"value":data,"stroke":{"width":4}})
		.id({"value":["g","group","c"]})         // key for which our data is unique on
		.aggs({"a": "mean"})
		.depth(1)
		.y({"value":"s","label":"Cases","scale":"linear"})         // key to use for y-axis
		.x({"value":"a","label":"Age"})          // key to use for x-axis
		.time({"value":"t","solo":[2012]}) 
		.color("group")
		.order("group")
		.font(font)
		.margin("0px 30px 10px 20px")
		.icon({"style": "knockout","value": "icon"})
		.legend({"filters":true})
		.messages({"style":false,"branding":false})
		.legend({"size":30})
		.axes({"background": {"color": "#eee"}}) 
		.shape({"interpolate": "basis"})
		.title({"value":cnames[initcountry],"sub":{"value":"Deadly Timeline | Global Causes of Death Visualization | Line Plot"}})
		.title(title)
		.ui({"font":{"size":12},"value":[
		  {
			"method" : "depth",
			"value"  :[{"Group":1}, {"Cause":2} ],
			"label" : " "
		  },
		  {
			"method" : function(value){
			  var v3=(value=="s")?"Cases":"Cases / Population"
			  val3=(value=="s")?"":"p";
			  visualization3
			  .y(vfunc(gen3,val3))
			  .y({"label":v3})
			  .draw();
			},
			"value"  :[{"Cases":"s"} , {"Normalized":"p"}],
			"label" : " "
		  },
		  {
			"method" : function(value){
			  gen3=value;
			  visualization3
			  .y(vfunc(gen3,val3))
			  .draw();
			},
			"value"  : [{"Everyone":"s"},{"Women":"f"}, {"Men":"m"}],
			"label" : " "
		  }
		]})
		.tooltip({"sub":function(d){
			if (d["g"]=="m") 
				visualization3
				.tooltip({"background":"#ddddff"});
			else	visualization3
				.tooltip({"background":"#ffdddd"});
			return sub[d["g"]];
		}})
		.format({
		  "text": function(text, params) {
			  return textformatter(text, params);
		  },
		  "number": function(number, params) {
			  return numberformatter(number, params);
          }
		  })
		//.draw()             // finally, draw the visualization!

		
		visualization2
		.type("tree_map")    // visualization type
		.data(data)
		.id({"value":["group","group","c"],"grouping": true })         // key for which our data is unique on
		.aggs({"s":"sum"})
		.depth(1)
		.size({"value":"s"})         // key to use for y-axis
		.time({"value":"t","solo":[2012]}) 
		.color("group")       // color legend
		.order("group")
		.font(font)
		.margin("0px 40px 10px 30px")
		.icon({"style": "knockout","value": "icon"})
		.legend({"filters":true})
		.messages({"style":false,"branding":false})
		.legend({"size":30})
		.title({"value":cnames[initcountry],"sub":{"value":"Deadly Timeline | Global Causes of Death Visualization | Treemap"}})
		.title(title)
		.ui({"font":{"size":12},"value":[
		  {
			"method" : "depth",
			"value"  :[{"Group":1}, {"Cause":2} ],
			"label" : " "
		  },
		  {
			"method" : function(value){
			  val2=(value=="s")?"":"p";
			  visualization2
			  .size(vfunc(gen2,val2))
			  .draw();
			},
			"value"  :[{"Cases":"s"} , {"Normalized":"p"}],
			"label" : " "
		  },
		  {
			"method" : function(value){
			  gen2=value;
			  visualization2
			  .size(vfunc(gen2,val2))
			  .draw();
			},
			"value"  : [{"Everyone":"s"},{"Women":"f"}, {"Men":"m"}],
			"label" : " "
		  }
		]})
		.tooltip({"sub":function(d){
			if (d["g"]=="m") 
				visualization2
				.tooltip({"background":"#ddddff"});
			else	visualization2
				.tooltip({"background":"#ffdddd"});
			return sub[d["g"]];
		}})
		.format({
		  "text": function(text, params) {
			 return textformatter(text, params);
		  },
		  "number":function(number, params) {
			 return numberformatter(number, params);
          }
		  })
		//.draw()
		
		load=function(country,viz) {
		  
		  // instantiate JSZip, load and unzip data
		  JSZipUtils.getBinaryContent(path+country+'.zip', function(err, rawdata) {

			  d3.select("#csvdownload").node().href=path+country+'.zip';
			  d3.select("#csvdownload").node().download=cnames[country]+'.zip';
		  
			  initcountry=country;
		  
			  data=extend(rawdata);
			  sethash();
			  
			  ((viz==1) ? visualization : (viz==2) ? visualization2 : visualization3)
			  .data(data)
			  .title(cnames[country])
			  .draw()
			  
		  })
		};
		
		show(initviz); //initialize viz;
		
  })
  })
  })
  })
  })
  })
  })
</script>
</body>
</html>